{"version":3,"sources":["recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","src","alt","map","text","App","useState","counter","setCounter","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","id","href","onClick","onSubmit","e","preventDefault","placeholder","type","value","onChange","target","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"uPAsBeA,EAnBD,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,MAAMC,EAA8B,EAA9BA,SAASC,EAAqB,EAArBA,MAAMC,EAAe,EAAfA,YACjC,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,6BAAKN,IACL,qBAAKI,UAAWC,IAAMH,MAAOK,IAAKL,EAAOM,IAAI,KAC7C,+BACA,8CACKL,EAAYM,KAAI,SAAAN,GAAW,OAC3B,6BACKA,EAAYO,aAItB,8BAAG,4CAAmBT,SCoEnBU,G,MAjEH,WAGV,IAEA,EAA0BC,mBAAS,GAAnC,mBAAMC,EAAN,KAAcC,EAAd,KAEA,EAA6BF,mBAAS,IAAtC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA2BJ,mBAAS,IAApC,mBAAOK,EAAP,KAAcC,EAAd,KAEA,EAAyBN,mBAAS,UAAlC,mBAAOO,EAAP,KAAaC,EAAb,KAEAC,qBAAU,WACLC,MACE,CAACH,IAER,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,oCAAD,OAAqCL,EAArC,mBAdjB,WAciB,oBAbhB,qCAYK,cACXM,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBX,EAAWW,EAAKC,MAHC,2CAAH,qDAehB,OACE,sBAAMxB,UAAU,MAAhB,UACA,uBACA,qBAAKyB,GAAG,QACR,sBAAKzB,UAAU,SAAf,UACA,iCAAQ,mBAAG0B,KAAK,OAAR,SAAe,qBAAI1B,UAAU,UAAd,gBAA2B,sCAA3B,aACvB,qBAAIA,UAAU,MAAM2B,QAAS,kBAAIjB,EAAWD,EAAQ,IAApD,4BAAwEA,QAKxE,uBAAOmB,SAhBS,SAAAC,GAChBA,EAAEC,iBACFd,EAASH,IAcmBb,UAAU,cAAtC,UACE,uBAAOA,UAAU,aAAa+B,YAAY,mBAAmBC,KAAK,OAAOC,MAAOpB,EAAQqB,SArBvE,SAAAL,GACnBf,EAAUe,EAAEM,OAAOF,UAqBjB,wBAAQjC,UAAU,gBACjBgC,KAAK,SADN,6BAKF,qBAAMhC,UAAU,UAAhB,SACCW,EAAQN,KAAI,SAAAH,GAAM,OACjB,cAAC,EAAD,CAECN,MAAOM,EAAOA,OAAOkC,MACpBvC,SAAUK,EAAOA,OAAOL,SACxBC,MAAOI,EAAOA,OAAOJ,MACpBC,YAAaG,EAAOA,OAAOH,aAJxBG,EAAOA,OAAOkC,iBC3DXC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBChBAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,yB","file":"static/js/main.eca5b157.chunk.js","sourcesContent":["import React from \"react\";\nimport style from \"./recipe.module.css\";\n\nconst Recipe =({title,calories,image,ingredients})=>{\n    return (\n        <div className={style.recipe}>\n            <h1>{title}</h1>\n            <img className={style.image} src={image} alt=\"\" />\n            <ol>\n            <h3>Ingredients:</h3>\n                {ingredients.map(ingredients =>(\n                 <li>\n                     {ingredients.text}\n                 </li>\n                 ))}\n            </ol>   \n            <p><b>Calories : </b>{calories}</p>\n           \n        </div>\n    );\n};\n\nexport default Recipe;","import React,{useEffect,useState} from \"react\";\n// import logo from '../public/vilasC1.webp';\nimport Recipe from \"./recipe\";\nimport './App.css';\n\n// from chrome\n// const http = require('http');\n// const port = process.env.PORT || 3000\n\n// const server = http.createServer((req, res) => {\n//   res.statusCode = 200;\n//   res.setHeader('Content-Type', 'text/html');\n//   // res.end('<h1>Hello World</h1>');\n// });\n\n// server.listen(port,() => {\n//   console.log(`Server running at port `+port);\n// });\n\nconst App = () =>{\n\n\n  const APP_ID=\"2476cbe4\";\n  const APP_KEY=\"b19127c8bf8749ab8cc49ad126ccbf6d\";\n  const[counter,setCounter]=useState(0);\n\n  const [recipes,setRecipes] = useState([]);\n  const [search,setSearch] = useState(\"\");\n\n  const [query,setQuery] = useState('recipe');\n\n  useEffect(()=>{\n       getRecipes();\n       },[query]);\n\n  const getRecipes = async ()=>{\n    const response = await fetch(`https://api.edamam.com/search?&q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data = await response.json();\n    setRecipes(data.hits);\n  };\n\n  const updateSearch = e =>{\n    setSearch(e.target.value);\n  };\n\n  const getSearch = e =>{\n    e.preventDefault();\n    setQuery(search);\n  };\n\n  return(\n    <div  className=\"App\">\n    <br/>\n    <div id=\"pg1\"></div>\n    <div className=\"header\">\n    <center><a href=\"#pg1\"><h1 className=\"appname\">Foo<span>db</span>udd</h1></a></center>\n    <h2 className=\"fh1\" onClick={()=>setCounter(counter+1)}>Hello Foodies! {counter}</h2> \n \n    </div>\n   \n\n    <form  onSubmit={getSearch} className=\"search-form\">\n      <input className=\"search-bar\" placeholder=\"Find out more...\" type=\"text\" value={search} onChange={updateSearch}/>\n      <button className=\"search-button\"\n       type=\"submit\"> \n        üîç                                               \n      </button>\n    </form>\n    <div  className=\"recipes\">\n    {recipes.map(recipe=>(\n      <Recipe\n       key={recipe.recipe.label} \n       title={recipe.recipe.label}\n        calories={recipe.recipe.calories} \n        image={recipe.recipe.image}\n         ingredients={recipe.recipe.ingredients} />\n    ))}\n    </div>\n   \n    </div> \n  );\n \n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__BdaUe\",\"image\":\"recipe_image__BtdIE\"};"],"sourceRoot":""}