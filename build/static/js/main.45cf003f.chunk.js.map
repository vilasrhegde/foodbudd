{"version":3,"sources":["recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","cautions","healthLabels","dishType","mealType","cuisineType","digest","url","totalDaily","totalNutrients","match","className","style","recipe","onClick","src","alt","map","text","href","target","App","APP_ID","APP_KEY","useState","recipes","setRecipes","search","setSearch","query","setQuery","sethealthLabel","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","id","onSubmit","e","preventDefault","placeholder","type","value","onChange","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.45cf003f.chunk.js","sourcesContent":["import React from \"react\";\nimport style from \"./recipe.module.css\";\n\n\n// digest,cuisineType,mealType,cautions\nconst Recipe =({title,calories,image,ingredients,healthLabels,cautions,dishType,mealType,digest,cuisineType,totalDaily,url,totalNutrients})=>{\n    return (\n        image.match(/\\.(jpeg|jpg|gif|png)$/)\n\n       !=null&&( <div className={style.recipe} onClick={url} >\n            <h1>{title}</h1>\n            <img className={style.image} src={image} alt=\"image\" />\n            <ol>\n            <h3>How to make?</h3>\n                {ingredients.map(ingredients =>(\n                 <li>\n                     {ingredients.text}\n                 </li>\n                 ))}\n            </ol>   \n            <p><b>Calories : </b>{calories}</p>\n            <p><b>Cautions: </b>{cautions}</p> \n            <p><b>Dish Type: </b>{dishType}</p>\n            <p><b>Meal type: </b>{mealType}</p> \n            <p><b>Cuisine type: </b>{cuisineType}</p>\n            {/* <p><b>Total Nutrients: </b>{totalNutrients}</p> */}\n            {/* <p><b>Total Daily: </b>{totalDaily}</p> */}\n            <button className=\"knowmore\">\n            <a href={url} target=\"_blank\">Know more</a>\n            </button>\n            {/* <p className=\"health\"><b>Health label :</b>{healthLabels} </p> */}\n            {/* <p><b>Digest: </b>{digest}</p> */}\n           \n            \n           \n        </div>\n       )\n    );\n};\n\nexport default Recipe;","import React,{useEffect,useState} from \"react\";\n// import logo from '../public/vilasC1.webp';\nimport Recipe from \"./recipe\";\nimport './App.css';\n\n\n// from chrome\n// const http = require('http');\n// const port = process.env.PORT || 3000\n\n// const server = http.createServer((req, res) => {\n//   res.statusCode = 200;\n//   res.setHeader('Content-Type', 'text/html');\n//   // res.end('<h1>Hello World</h1>');\n// });\n\n// server.listen(port,() => {\n//   console.log(`Server running at port `+port);\n// });\n\nconst App = () =>{\n\n\n  const APP_ID=\"2476cbe4\";\n  const APP_KEY=\"b19127c8bf8749ab8cc49ad126ccbf6d\";\n\n  const[counter,setCounter]=useState(0);\n\n  const [recipes,setRecipes] = useState([]);\n  const [search,setSearch] = useState(\"\");\n\n  const [query,setQuery] = useState(\"\");\n  const [healthLabels, sethealthLabel] = useState(\"vegan\")\n\n  var url = `https://api.edamam.com/search?&q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&health=${healthLabels}`;\n  // async function getRecipes(){\n  //   var result = await Axios.get(url);\n  //   console.log(result.data);\n  // }\n  useEffect(()=>{\n       getRecipes();\n       },[query]);\n\n  const getRecipes = async ()=>{\n    const response = await fetch(`https://api.edamam.com/search?&q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&health=${healthLabels}`);\n    const data = await response.json();\n    setRecipes(data.hits);\n    console.log(data);\n\n  };\n\n  \n\n  const updateSearch = e =>{\n    setSearch(e.target.value);\n    console.log();\n  };\n\n  const getSearch = e =>{\n    e.preventDefault();\n    setQuery(search);\n  };\n\n \n\n  return(\n    <div  className=\"App\">\n    <br/>\n    <div id=\"pg1\"></div>\n    <div className=\"header\">\n    <center><a href=\"#pg1\"><h1 className=\"appname\">Foo<span>db</span>udd</h1></a></center>\n    {/* <h2 className=\"fh1\" onClick={()=>setCounter(counter+1)}>     Hello Foodies! {counter}</h2>  */}\n \n    </div>\n   \n\n    <form  onSubmit={getSearch} className=\"search-form\">\n      <input className=\"search-bar\" placeholder=\"Find out more...\" type=\"text\" value={search} onChange={updateSearch}/>\n      <select className=\"app_healthLabels\">\n        <option className=\"dropcontent\"   onClick={()=>sethealthLabel(\"vegan\")}>Vegan</option>\n        <option className=\"dropcontent\"   onClick={()=>sethealthLabel(\"paleo\")}>Paleo</option>\n        <option className=\"dropcontent\"   onClick={()=>sethealthLabel(\"low-sugar\")}>Low-Sugar</option>\n        <option className=\"dropcontent\"   onClick={()=>sethealthLabel(\"dairy-free\")}>Dairy-free</option>\n        <option className=\"dropcontent\"   onClick={()=>sethealthLabel(\"gluten-free\")}>Gluten-Free</option>\n        <option className=\"dropcontent\"   onClick={()=>sethealthLabel(\"wheat-free\")}>Wheat-Free</option>\n        <option className=\"dropcontent\"   onClick={()=>sethealthLabel(\"egg-free\")}>Egg-Free</option>\n        <option className=\"dropcontent\"   onClick={()=>sethealthLabel(\"peanut-free\")}>Peanut-Free</option>\n        <option className=\"dropcontent\"   onClick={()=>sethealthLabel(\"Tree-nut-free\")}>Tree-nut--Free</option>\n        <option className=\"dropcontent\"   onClick={()=>sethealthLabel(\"soy-free\")}>Soy-Free</option>\n        <option className=\"dropcontent\"   onClick={()=>sethealthLabel(\"fish-free\")}>Fish-Free</option>\n        <option className=\"dropcontent\"   onClick={()=>sethealthLabel(\"shellfish-free\")}>Shellfish-Free</option>\n\n\n      </select>\n      <button className=\"search-button\"\n       type=\"submit\"> \n        üîç                                               \n      </button>\n     \n    </form>\n    <div  className=\"recipes\">\n    {recipes.map(recipe=>(\n      <Recipe\n       key={recipe.recipe.label} \n       title={recipe.recipe.label}\n        calories={recipe.recipe.calories} \n        image={recipe.recipe.image}\n         ingredients={recipe.recipe.ingredients} \n          healthLabels={recipe.recipe.healthLabels}\n          digest={recipe.recipe.digest}\n          dishType={recipe.recipe.dishType}\n          mealType={recipe.recipe.mealType}\n          cautions={recipe.recipe.cautions}\n          cuisineType={recipe.recipe.cuisineType}\n          // totalDaily={recipe.recipe.totalDaily}\n          url={recipe.recipe.url}\n          totalNutrients={recipe.recipe.totalNutrients}\n\n         />\n    ))}\n    </div>\n   \n    </div> \n  );\n \n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__BdaUe\",\"image\":\"recipe_image__BtdIE\"};"],"sourceRoot":""}